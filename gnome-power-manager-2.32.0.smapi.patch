diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//configure.ac gnome-power-manager-2.32.0//configure.ac
--- gnome-power-manager-2.32.0-orig//configure.ac	2010-09-22 13:02:17.000000000 +0200
+++ gnome-power-manager-2.32.0//configure.ac	2010-10-07 17:29:03.963333370 +0200
@@ -239,6 +239,18 @@
 AM_CONDITIONAL([HAVE_APPLETS], [test $have_applets = yes])
 
 dnl ---------------------------------------------------------------------------
+dnl - Build applets with smapi support
+dnl ---------------------------------------------------------------------------
+AC_ARG_ENABLE(tp-smapi, [  --enable-tp-smapi       Build power applets with tp-smapi support],enable_tp_smapi=$enableval,enable_tp_smapi=yes)
+AC_MSG_CHECKING([whether to build applets with tp-smapi support])
+have_tp_smapi=no
+if test x$enable_tp_smapi = xyes ; then
+    have_tp_smapi=yes
+    AC_DEFINE(HAVE_TPSMAPI, 1, [Define if we are building applets with tp-smapi support])
+fi
+AM_CONDITIONAL([HAVE_TPSMAPI], [test $have_tp_smapi = yes])
+
+dnl ---------------------------------------------------------------------------
 dnl - DocBook Documentation
 dnl ---------------------------------------------------------------------------
 AC_ARG_ENABLE(docbook-docs,
@@ -349,6 +361,7 @@
         compiler:                  ${CC}
         cflags:                    ${CFLAGS}
         Building extra applets:    ${enable_applets}
+	Building applets with tp-smapi support: ${enable_tp_smapi}
         Self test support:         ${have_tests}
         GConf default support:     ${have_gconfdefaults}
         Docbook support:           ${enable_docbook_docs}
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//data/gpm-prefs.ui gnome-power-manager-2.32.0//data/gpm-prefs.ui
--- gnome-power-manager-2.32.0-orig//data/gpm-prefs.ui	2010-08-06 15:40:38.000000000 +0200
+++ gnome-power-manager-2.32.0//data/gpm-prefs.ui	2010-10-07 16:54:04.036666701 +0200
@@ -1058,6 +1058,82 @@
                 <property name="tab_fill">False</property>
               </packing>
             </child>
+            <child>
+              <object class="GtkVBox" id="vbox_smapi">
+                <property name="visible">True</property>
+                <property name="orientation">vertical</property>
+                <property name="spacing">6</property>
+                <child>
+                  <object class="GtkHBox" id="hbox3">
+                    <property name="visible">True</property>
+                    <child>
+                      <object class="GtkLabel" id="label_smapi_threshstart">
+                        <property name="visible">True</property>
+                        <property name="label" translatable="yes">start charging at</property>
+                      </object>
+                      <packing>
+                        <property name="position">0</property>
+                      </packing>
+                    </child>
+                    <child>
+                      <object class="GtkHScale" id="hscale_smapi_startthresh">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <property name="adjustment">adjustment8</property>
+                        <property name="value_pos">bottom</property>
+                      </object>
+                      <packing>
+                        <property name="position">1</property>
+                      </packing>
+                    </child>
+                  </object>
+                  <packing>
+                    <property name="position">0</property>
+                  </packing>
+                </child>
+                <child>
+                  <object class="GtkHBox" id="hbox4">
+                    <property name="visible">True</property>
+                    <child>
+                      <object class="GtkLabel" id="label_smapi_stopthresh">
+                        <property name="visible">True</property>
+                        <property name="label" translatable="yes">stop charging at</property>
+                      </object>
+                      <packing>
+                        <property name="position">0</property>
+                      </packing>
+                    </child>
+                    <child>
+                      <object class="GtkHScale" id="hscale_smapi_stopthresh">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <property name="adjustment">adjustment9</property>
+                        <property name="value_pos">bottom</property>
+                      </object>
+                      <packing>
+                        <property name="position">1</property>
+                      </packing>
+                    </child>
+                  </object>
+                  <packing>
+                    <property name="position">1</property>
+                  </packing>
+                </child>
+              </object>
+              <packing>
+                <property name="position">4</property>
+              </packing>
+            </child>
+            <child type="tab">
+              <object class="GtkLabel" id="label_tab_smapi">
+                <property name="visible">True</property>
+                <property name="label" translatable="yes">SMAPI</property>
+              </object>
+              <packing>
+                <property name="position">4</property>
+                <property name="tab_fill">False</property>
+              </packing>
+            </child>
           </object>
           <packing>
             <property name="fill">False</property>
@@ -1131,4 +1207,16 @@
       <action-widget response="0">button_close</action-widget>
     </action-widgets>
   </object>
+  <object class="GtkAdjustment" id="adjustment8">
+    <property name="upper">100</property>
+    <property name="step_increment">1</property>
+    <property name="page_increment">10</property>
+    <property name="page_size">10</property>
+  </object>
+  <object class="GtkAdjustment" id="adjustment9">
+    <property name="upper">100</property>
+    <property name="step_increment">1</property>
+    <property name="page_increment">10</property>
+    <property name="page_size">10</property>
+  </object>
 </interface>
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//po/de.po gnome-power-manager-2.32.0//po/de.po
--- gnome-power-manager-2.32.0-orig//po/de.po	2010-09-22 13:02:17.000000000 +0200
+++ gnome-power-manager-2.32.0//po/de.po	2010-10-07 17:20:44.360000036 +0200
@@ -97,6 +97,18 @@
 "Sie bitte an die Free Software Foundation, Inc., 59 Temple Place,\n"
 "Suite 330, Boston, MA  02111-1307  USA"
 
+#: ../src/gpm-tray-icon:573
+msgid ""
+"_Force Battery Discharging"
+msgstr ""
+"_Akkuentladung erzwingen"
+
+#: ../src/gpm-tray-icon:578
+msgid ""
+"Do not _Force Battery Discharging"
+msgstr ""
+"_Akkuentladung nicht erzwingen"
+
 #: ../applets/brightness/brightness-applet.c:771
 msgid "Copyright © 2006 Benjamin Canou"
 msgstr "Copyright © 2006 Benjamin Canou"
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-engine.c gnome-power-manager-2.32.0//src/gpm-engine.c
--- gnome-power-manager-2.32.0-orig//src/gpm-engine.c	2010-08-06 16:37:59.000000000 +0200
+++ gnome-power-manager-2.32.0//src/gpm-engine.c	2010-10-07 17:51:59.573333367 +0200
@@ -22,6 +22,10 @@
 #include "config.h"
 
 #include <string.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <stdio.h>
 #include <glib.h>
 #include <glib/gi18n.h>
 #include <gconf/gconf-client.h>
@@ -33,6 +37,9 @@
 #include "gpm-upower.h"
 #include "gpm-marshal.h"
 #include "gpm-engine.h"
+#ifdef HAVE_TPSMAPI
+#include "gpm-smapi.h"
+#endif // HAVE_TPSMAPI
 #include "gpm-stock-icons.h"
 #include "gpm-prefs-server.h"
 #include "gpm-phone.h"
@@ -824,7 +831,10 @@
 	UpDeviceKind kind;
 	gboolean ret;
 	GError *error = NULL;
-
+#ifdef HAVE_TPSMAPI
+	struct stat s;
+	char buf[256];  
+#endif // HAVE_TPSMAPI
 	g_return_val_if_fail (engine != NULL, FALSE);
 	g_return_val_if_fail (GPM_IS_ENGINE (engine), FALSE);
 
@@ -855,8 +865,17 @@
 
 	/* only show the battery prefs section if we have batteries */
 	prefs_server = gpm_prefs_server_new ();
-	if (has_battery)
+	if (has_battery) {
 		gpm_prefs_server_set_capability (prefs_server, GPM_PREFS_SERVER_BATTERY);
+#ifdef HAVE_TPSMAPI
+		/* checking for smapi only on availability of batteries */
+		/* occurence of start_thresh file of first battery */
+		sprintf (buf, SYSFS_START_CHARGE_THRESH, 0);
+		if (0 == stat (buf, &s))
+			gpm_prefs_server_set_capability (prefs_server, GPM_PREFS_SERVER_SMAPI);
+#endif // HAVE_TPSMAPI
+	}
+
 	if (has_ups)
 		gpm_prefs_server_set_capability (prefs_server, GPM_PREFS_SERVER_UPS);
 	g_object_unref (prefs_server);
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-prefs-core.c gnome-power-manager-2.32.0//src/gpm-prefs-core.c
--- gnome-power-manager-2.32.0-orig//src/gpm-prefs-core.c	2010-08-06 16:28:52.000000000 +0200
+++ gnome-power-manager-2.32.0//src/gpm-prefs-core.c	2010-10-07 18:14:23.673333368 +0200
@@ -38,6 +38,7 @@
 
 #include "gpm-tray-icon.h"
 #include "gpm-common.h"
+#include "gpm-smapi.h"
 #include "gpm-prefs-core.h"
 #include "gpm-stock-icons.h"
 #include "gpm-prefs-server.h"
@@ -53,6 +54,9 @@
 	gboolean		 has_batteries;
 	gboolean		 has_lcd;
 	gboolean		 has_ups;
+#ifdef HAVE_TPSMAPI
+	gboolean		 has_smapi;
+#endif // HAVE_TPSMAPI
 	gboolean		 has_button_lid;
 	gboolean		 has_button_suspend;
 	gboolean		 can_shutdown;
@@ -197,6 +201,68 @@
 	return g_strdup_printf ("%.0f%%", value);
 }
 
+#ifdef HAVE_TPSMAPI
+/**
+ * gpm_prefs_thresh_slider_changed_cb:
+ * @range: The GtkRange object
+ * @cell: The battery cell to handle
+ *
+ * TODO: handle different cells
+ **/
+static void
+gpm_prefs_thresh_slider_changed_cb (GtkRange *range,
+				    int       cell)
+{
+	int value;
+	const gchar *widget_name;
+	
+	value = (int) gtk_range_get_value (range);
+	widget_name = gtk_buildable_get_name ((GtkBuildable*)range);
+	
+	if (0 == strcmp ("hscale_smapi_startthresh", widget_name)) 
+		set_battery_start_charge_thresh (0, value);
+	else 
+		set_battery_stop_charge_thresh (0, value);
+}
+/**
+ * gpm_prefs_setup_thresh_slider:
+ * @prefs: This prefs class instance
+ * @widget_name: The GtkWidget name
+ *
+ * TODO: handle different cells
+ **/
+static GtkWidget *
+gpm_prefs_setup_thresh_slider (GpmPrefs    *prefs,
+			      const gchar *widget_name)
+{
+	GtkWidget *widget;
+	gint value;
+
+	//widget = glade_xml_get_widget (prefs->priv->glade_xml, widget_name);
+	widget = GTK_WIDGET (gtk_builder_get_object (prefs->priv->builder, widget_name));
+
+	
+	g_signal_connect (G_OBJECT (widget), "format-value",
+			  G_CALLBACK (gpm_prefs_format_percentage_cb), prefs);
+
+	if (0 == strcmp ("hscale_smapi_startthresh", widget_name))
+		value = get_battery_start_charge_thresh (0);
+	else
+		value = get_battery_stop_charge_thresh (0);
+
+	gtk_widget_set_sensitive (widget, TRUE);
+
+	gtk_range_set_value (GTK_RANGE (widget), value);
+
+	g_signal_connect (G_OBJECT (widget), "value-changed",
+			  G_CALLBACK (gpm_prefs_thresh_slider_changed_cb),
+			  prefs);
+
+	return widget;
+}
+#endif // HAVE_TPSMAPI
+
+
 /**
  * gpm_prefs_brightness_slider_changed_cb:
  * @range: The GtkRange object
@@ -746,9 +812,21 @@
 		widget = GTK_WIDGET (gtk_builder_get_object (prefs->priv->builder, "vbox_battery"));
 		page = gtk_notebook_page_num (notebook, GTK_WIDGET (widget));
 		gtk_notebook_remove_page (notebook, page);
+
+		notebook = GTK_NOTEBOOK (gtk_builder_get_object (prefs->priv->builder, "notebook_preferences"));
+		widget = GTK_WIDGET (gtk_builder_get_object (prefs->priv->builder, "vbox_smapi"));
+		page = gtk_notebook_page_num (notebook, GTK_WIDGET (widget));
+		gtk_notebook_remove_page (notebook, page);
 		return;
 	}
-
+	
+#ifndef HAVE_TPSMAPI
+	notebook = GTK_NOTEBOOK (gtk_builder_get_object (prefs->priv->builder, "notebook_preferences"));
+	widget = GTK_WIDGET (gtk_builder_get_object (prefs->priv->builder, "vbox_smapi"));
+	page = gtk_notebook_page_num (notebook, GTK_WIDGET (widget));
+	gtk_notebook_remove_page (notebook, page);
+#endif // HAVE_TPSMAPI
+	
 	gpm_prefs_setup_action_combo (prefs, "combobox_battery_lid",
 				      GPM_CONF_BUTTON_LID_BATT,
 				      button_lid_actions);
@@ -900,6 +978,33 @@
 	g_object_unref (proxy);
 }
 
+#ifdef HAVE_TPSMAPI
+static void
+prefs_setup_smapi (GpmPrefs *prefs)
+{
+	GtkWidget *widget;
+	GtkNotebook *notebook;
+	gint page;
+
+	if (prefs->priv->has_batteries == FALSE) {
+		//notebook = glade_xml_get_widget (prefs->priv->glade_xml, "notebook_preferences");
+		//widget = glade_xml_get_widget (prefs->priv->glade_xml, "vbox_smapi");
+		//page = gtk_notebook_page_num (GTK_NOTEBOOK (notebook), GTK_WIDGET (widget));
+		//gtk_notebook_remove_page (GTK_NOTEBOOK (notebook), page);
+		//return;
+		notebook = GTK_NOTEBOOK (gtk_builder_get_object (prefs->priv->builder, "notebook_preferences"));
+		widget = GTK_WIDGET (gtk_builder_get_object (prefs->priv->builder, "vbox_smapi"));
+		page = gtk_notebook_page_num (notebook, GTK_WIDGET (widget));
+		gtk_notebook_remove_page (notebook, page);
+		return;
+	}
+
+	gpm_prefs_setup_thresh_slider (prefs, "hscale_smapi_startthresh");
+	gpm_prefs_setup_thresh_slider (prefs, "hscale_smapi_stopthresh");
+}
+#endif // HAVE_TPSMAPI
+
+
 /**
  * gpm_prefs_init:
  * @prefs: This prefs class instance
@@ -934,6 +1039,9 @@
 	/* get properties from gnome-power-manager */
 	prefs->priv->has_batteries = ((caps & GPM_PREFS_SERVER_BATTERY) > 0);
 	prefs->priv->has_ups = ((caps & GPM_PREFS_SERVER_UPS) > 0);
+#ifdef HAVE_TPSMAPI
+	prefs->priv->has_smapi = ((caps & GPM_PREFS_SERVER_SMAPI) > 0);
+#endif // HAVE_TPSMAPI 
 	prefs->priv->has_lcd = ((caps & GPM_PREFS_SERVER_BACKLIGHT) > 0);
 	prefs->priv->has_button_lid = ((caps & GPM_PREFS_SERVER_LID) > 0);
 	prefs->priv->has_button_suspend = TRUE;
@@ -985,6 +1093,9 @@
 	prefs_setup_battery (prefs);
 	prefs_setup_ups (prefs);
 	prefs_setup_general (prefs);
+#ifdef HAVE_TPSMAPI
+	prefs_setup_smapi (prefs);
+#endif // HAVE_TPSMAPI
 	prefs_setup_notification (prefs);
 
 	gtk_widget_show (main_window);
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-prefs-server.h gnome-power-manager-2.32.0//src/gpm-prefs-server.h
--- gnome-power-manager-2.32.0-orig//src/gpm-prefs-server.h	2010-08-06 15:47:28.000000000 +0200
+++ gnome-power-manager-2.32.0//src/gpm-prefs-server.h	2010-10-07 16:54:04.040000034 +0200
@@ -38,6 +38,7 @@
 #define GPM_PREFS_SERVER_BATTERY	8
 #define GPM_PREFS_SERVER_UPS		16
 #define GPM_PREFS_SERVER_KEYLIGHT	32
+#define GPM_PREFS_SERVER_SMAPI		64
 
 typedef struct GpmPrefsServerPrivate GpmPrefsServerPrivate;
 
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-smapi.c gnome-power-manager-2.32.0//src/gpm-smapi.c
--- gnome-power-manager-2.32.0-orig//src/gpm-smapi.c	1970-01-01 01:00:00.000000000 +0100
+++ gnome-power-manager-2.32.0//src/gpm-smapi.c	2010-10-07 16:54:04.040000034 +0200
@@ -0,0 +1,202 @@
+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*-
+ *
+ * Copyright (C) 2005-2007 Richard Hughes <richard@hughsie.com>
+ *
+ * Licensed under the GNU General Public License Version 2
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+
+#include "config.h"
+
+#ifdef HAVE_TPSMAPI
+
+#include <glib.h>
+#include <string.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <unistd.h>
+#include <stdlib.h>
+#include <glib/gi18n.h>
+#include <gdk/gdk.h>
+#include <gtk/gtk.h>
+
+#include "egg-debug.h"
+#include "gpm-smapi.h"
+
+#define BUF_LEN	128
+
+/**
+ * get_force_battery_discharging:
+ * @cell: number of battery (got from gpm)
+ *
+ * Returns 1, if Battery discharging is forced, 0 else.
+ **/
+int		get_force_battery_discharging	(int cell)
+{
+        int fd, ret;
+	char buf[BUF_LEN];
+	
+	sprintf (buf, SYSFS_FORCE_BATTERY_DISCHARGING, cell);
+	if ((fd = open (buf, O_RDONLY)) < 1)
+	{
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return -1;
+	}
+	
+	memset (buf, 0, sizeof (buf));
+	ret = read (fd, buf, 2);
+	close (fd);
+	return atoi (buf);
+}
+
+
+/**
+ * set_force_battery_discharging:
+ * @cell: number of battery (got from gpm)
+ * @value: The output value - 1 for discharging, 0 for normal mode
+ **/
+void		set_force_battery_discharging	(int cell, int value)
+{
+        int fd, ret;
+        char buf[BUF_LEN];
+
+	sprintf (buf, SYSFS_FORCE_BATTERY_DISCHARGING, cell);
+        if ((fd = open (buf, O_WRONLY)) < 1)
+        {
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return;
+        }
+
+        sprintf (buf, "%d", value);
+        ret = write (fd, buf, strlen (buf));
+        close (fd);
+}
+
+
+/**
+ * get_force_battery_start_charge_thresh
+ * @cell: number of battery (got from gpm)
+ *
+ * Battery will be charged, when over this return value, which is the percentage of capacity.
+ **/
+int		get_battery_start_charge_thresh	(int cell)
+{
+        int fd, ret;
+	char buf[BUF_LEN];
+
+	sprintf (buf, SYSFS_START_CHARGE_THRESH, cell);
+        if ((fd = open (buf, O_RDONLY)) < 1)
+        {
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return -1;
+	}
+
+        memset (buf, 0, sizeof (buf));
+        ret = read (fd, buf, BUF_LEN);
+        close (fd);
+	return atoi (buf);
+}
+
+
+/**
+ * set_force_battery_start_charge_thresh
+ * @cell: number of battery (got from gpm)
+ * @value start thresh (percentage)
+ *
+ * Battery will be charged, when over this value, which is the percentage of capacity.
+ **/
+void		set_battery_start_charge_thresh	(int cell, int value)
+{
+        int fd, ret;
+        char buf[BUF_LEN];
+
+	sprintf (buf, SYSFS_START_CHARGE_THRESH, cell);
+        if ((fd = open (buf, O_WRONLY)) < 1)
+        {
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return;
+	}
+
+        sprintf (buf, "%d", value);
+        ret = write (fd, buf, strlen (buf));
+        close (fd);
+}
+
+
+/**
+ * get_force_battery_stop_charge_thresh
+ * @cell: number of battery (got from gpm)
+ *
+ * Battery will stop charging, when over this return value, which is the percentage of capacity.
+ **/
+int		get_battery_stop_charge_thresh	(int cell)
+{
+        int fd, ret;
+	char buf[BUF_LEN];
+
+	sprintf (buf, SYSFS_STOP_CHARGE_THRESH, cell);
+        if ((fd = open (buf, O_RDONLY)) < 1)
+        {
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return -1;
+	}
+
+        memset (buf, 0, sizeof (buf));
+        ret = read (fd, buf, BUF_LEN);
+        close (fd);
+	return atoi (buf);
+}
+
+
+/**
+ * set_force_battery_stop_charge_thresh
+ * @cell: number of battery (got from gpm)
+ * @value stop thresh (percentage)
+ *
+ * Battery will stop charging, when over this value, which is the percentage of capacity.
+ **/
+void		set_battery_stop_charge_thresh	(int cell, int value)
+{
+        int fd, ret;
+        char buf[BUF_LEN];
+
+	sprintf (buf, SYSFS_STOP_CHARGE_THRESH, cell);
+        if ((fd = open (buf, O_WRONLY)) < 1)
+        {
+	    egg_debug ("Could not open sysfs file:");
+	    egg_debug ("%s", buf);
+	    fprintf (stderr, "Could not open sysfs file: %s\n", buf);
+	    return;
+	}
+
+        sprintf (buf, "%d", value);
+        ret = write (fd, buf, strlen (buf));
+        close (fd);
+}
+
+#endif // HAVE_TPSMAPI
+
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-smapi.h gnome-power-manager-2.32.0//src/gpm-smapi.h
--- gnome-power-manager-2.32.0-orig//src/gpm-smapi.h	1970-01-01 01:00:00.000000000 +0100
+++ gnome-power-manager-2.32.0//src/gpm-smapi.h	2010-10-07 16:54:04.040000034 +0200
@@ -0,0 +1,44 @@
+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*-
+ *
+ * Copyright (C) 2005-2007 Richard Hughes <richard@hughsie.com>
+ *
+ * Licensed under the GNU General Public License Version 2
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+
+#ifndef __GPMSMAPI_H
+#define __GPMSMAPI_H
+
+#ifdef HAVE_TPSMAPI
+
+#define SYSFS_FORCE_BATTERY_DISCHARGING "/sys/devices/platform/smapi/BAT%d/force_discharge"
+#define SYSFS_START_CHARGE_THRESH       "/sys/devices/platform/smapi/BAT%d/start_charge_thresh"
+#define SYSFS_STOP_CHARGE_THRESH        "/sys/devices/platform/smapi/BAT%d/stop_charge_thresh"
+
+
+int		get_force_battery_discharging	(int cell);
+void		set_force_battery_discharging	(int cell, int value);
+
+int		get_battery_start_charge_thresh	(int cell);
+void		set_battery_start_charge_thresh	(int cell, int value);
+
+int		get_battery_stop_charge_thresh	(int cell);
+void		set_battery_stop_charge_thresh	(int cell, int value);
+
+#endif // HAVE_TPSMAPI
+
+#endif /* __GPMSMAPI_H */
+
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/gpm-tray-icon.c gnome-power-manager-2.32.0//src/gpm-tray-icon.c
--- gnome-power-manager-2.32.0-orig//src/gpm-tray-icon.c	2010-08-06 16:54:36.000000000 +0200
+++ gnome-power-manager-2.32.0//src/gpm-tray-icon.c	2010-10-07 17:57:55.613333367 +0200
@@ -47,6 +47,7 @@
 #include "gpm-engine.h"
 #include "gpm-common.h"
 #include "gpm-stock-icons.h"
+#include "gpm-smapi.h"
 #include "gpm-tray-icon.h"
 
 static void     gpm_tray_icon_finalize   (GObject	   *object);
@@ -170,6 +171,22 @@
 		egg_warning ("Couldn't execute command: %s", command);
 }
 
+#ifdef HAVE_TPSMAPI
+/**
+ * gpm_tray_icon_force_battery_discharging:
+ *
+ * Toggle Force of Battery Discharging
+ **/
+static void
+gpm_tray_icon_force_battery_discharging (GtkWidget   *widget,
+					 int         i)
+{
+	set_force_battery_discharging (i,
+		1 - get_force_battery_discharging (i));
+}
+#endif // HAVE_TPSMAPI
+
+
 /**
  * gpm_tray_icon_popup_cleared_cd:
  * @widget: The popup Gtkwidget
@@ -248,6 +265,27 @@
 		g_object_set_data (G_OBJECT (item), "object-path", (gpointer) object_path);
 		gtk_menu_shell_append (GTK_MENU_SHELL (menu), item);
 
+#ifdef HAVE_TPSMAPI
+
+		/* Force Battery Discharging */
+		if (get_force_battery_discharging (i) == 0)
+		{
+			item = gtk_image_menu_item_new_with_mnemonic (_("_Force Battery Discharging"));
+			image = gtk_image_new_from_icon_name (GTK_STOCK_DISCONNECT, GTK_ICON_SIZE_MENU);
+		}
+		else
+		{
+			item = gtk_image_menu_item_new_with_mnemonic (_("Do not _Force Battery Discharging"));
+			image = gtk_image_new_from_icon_name (GTK_STOCK_CONNECT, GTK_ICON_SIZE_MENU);
+		}
+		gtk_image_menu_item_set_image (GTK_IMAGE_MENU_ITEM (item), image);
+		g_signal_connect (G_OBJECT (item), "activate",
+				  G_CALLBACK (gpm_tray_icon_force_battery_discharging), (gpointer) (long long) i);
+		//gtk_check_menu_item_set_active (GTK_CHECK_MENU_ITEM (item), (gboolean) get_force_battery_discharging ());
+		gtk_menu_shell_append (GTK_MENU_SHELL (menu), item);
+#endif // HAVE_TPSMAPI
+
+		
 		g_free (icon_name);
 		g_free (label);
 	}
diff -Naur -x .bzr gnome-power-manager-2.32.0-orig//src/Makefile.am gnome-power-manager-2.32.0//src/Makefile.am
--- gnome-power-manager-2.32.0-orig//src/Makefile.am	2010-08-06 16:31:02.000000000 +0200
+++ gnome-power-manager-2.32.0//src/Makefile.am	2010-10-07 17:31:32.103333370 +0200
@@ -122,6 +122,8 @@
 	gpm-prefs.c					\
 	gpm-prefs-core.h				\
 	gpm-prefs-core.c				\
+	gpm-smapi.h					\
+	gpm-smapi.c					\
 	$(NULL)
 
 gnome_power_preferences_LDADD =				\
@@ -165,6 +167,8 @@
 	gpm-manager.c					\
 	gpm-tray-icon.h					\
 	gpm-tray-icon.c					\
+	gpm-smapi.h					\
+	gpm-smapi.c					\
 	gpm-screensaver.h				\
 	gpm-screensaver.c				\
 	gpm-session.h					\
